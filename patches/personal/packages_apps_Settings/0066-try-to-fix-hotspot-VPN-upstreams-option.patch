From ceacbc00f515b0d5528e4d053a228e4227b86370 Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Fri, 8 Oct 2021 20:35:56 +0000
Subject: [PATCH 66/67] try to fix hotspot VPN upstreams option

  based on
  https://github.com/ArrowOS/android_packages_apps_Settings/commit/db72601afb7a62b3e75b5c048cd07576876570a6#diff-a64feb68999b9e1b61ed99eca0838b9e45ce789de62f02436706d306b6b60269R47
  https://github.com/ArrowOS/android_packages_apps_Settings/blob/arrow-11.0/src/com/android/settings/arrow/preferences/SecureSettingSwitchPreference.java
---
 res/xml/tether_prefs.xml                      |  2 +-
 .../SecureSettingSwitchPreference.java        | 64 +++++++++++++++++++
 2 files changed, 65 insertions(+), 1 deletion(-)
 create mode 100644 src/com/caos/settings/preference/SecureSettingSwitchPreference.java

diff --git a/res/xml/tether_prefs.xml b/res/xml/tether_prefs.xml
index b8c0f55d87..165081f550 100644
--- a/res/xml/tether_prefs.xml
+++ b/res/xml/tether_prefs.xml
@@ -44,7 +44,7 @@
         android:summary="@string/ethernet_tethering_subtext"
         settings:keywords="@string/keywords_hotspot_tethering" />
 
-    <com.caos.settings.preference.SystemSettingSwitchPreference
+    <com.caos.settings.preference.SecureSettingSwitchPreference
         android:key="tethering_allow_vpn_upstreams"
         android:title="@string/tethering_allow_vpn_upstreams_title"
         android:summary="@string/tethering_allow_vpn_upstreams_summary"
diff --git a/src/com/caos/settings/preference/SecureSettingSwitchPreference.java b/src/com/caos/settings/preference/SecureSettingSwitchPreference.java
new file mode 100644
index 0000000000..661e0aa3d2
--- /dev/null
+++ b/src/com/caos/settings/preference/SecureSettingSwitchPreference.java
@@ -0,0 +1,64 @@
+/*
+ * Copyright (C) 2014 The CyanogenMod project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.caos.settings.preference;
+
+import android.content.Context;
+import android.provider.Settings;
+import androidx.preference.SwitchPreference;
+import android.util.AttributeSet;
+
+public class SecureSettingSwitchPreference extends SwitchPreference {
+    public SecureSettingSwitchPreference(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+    }
+
+    public SecureSettingSwitchPreference(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    public SecureSettingSwitchPreference(Context context) {
+        super(context, null);
+    }
+
+    @Override
+    protected boolean persistBoolean(boolean value) {
+        if (shouldPersist()) {
+            if (value == getPersistedBoolean(!value)) {
+                // It's already there, so the same as persisting
+                return true;
+            }
+            Settings.Secure.putInt(getContext().getContentResolver(), getKey(), value ? 1 : 0);
+            return true;
+        }
+        return false;
+    }
+
+    @Override
+    protected boolean getPersistedBoolean(boolean defaultReturnValue) {
+        if (!shouldPersist()) {
+            return defaultReturnValue;
+        }
+        return Settings.Secure.getInt(getContext().getContentResolver(),
+                getKey(), defaultReturnValue ? 1 : 0) != 0;
+    }
+
+    @Override
+    protected void onSetInitialValue(boolean restoreValue, Object defaultValue) {
+        setChecked(Settings.Secure.getString(getContext().getContentResolver(), getKey()) != null ? getPersistedBoolean(isChecked())
+                : (Boolean) defaultValue);
+    }
+}
-- 
2.30.2

