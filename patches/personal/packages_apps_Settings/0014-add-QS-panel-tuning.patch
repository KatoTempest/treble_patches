From 0dcf65e48ca480eb72c29fc753a5acd3356ca0ed Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Thu, 9 Apr 2020 22:30:52 +0300
Subject: [PATCH 14/24] add QS panel tuning

	modified:   res/values/strings.xml
	modified:   res/xml/display_settings.xml
	modified:   src/com/android/settings/DisplaySettings.java
	modified:   src/com/android/settings/display/OverlayCategoryPreferenceController.java
---
 res/values/strings.xml                                    | 2 ++
 res/xml/display_settings.xml                              | 3 +++
 src/com/android/settings/DisplaySettings.java             | 2 ++
 .../display/OverlayCategoryPreferenceController.java      | 8 ++++++++
 4 files changed, 15 insertions(+)

diff --git a/res/values/strings.xml b/res/values/strings.xml
index 0de8cc089d..5202675935 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -10661,6 +10661,8 @@
     <string name="theme_customization_icon_pack_title">Icon style</string>
     <!-- [CHAR_LIMIT=NONE] Developer Settings: Title of the setting which enables overlays to customize the      adaptive icon shape (e.g. launcher and quick settings icons). -->
     <string name="theme_customization_icon_shape_title">Icon shape</string>
+    <!-- [CHAR_LIMIT=NONE] Developer Settings: Title of the setting which enables overlays to customize the QS Panel layout (e.g. set 3x3 icons). -->
+    <string name="theme_customization_qspanel_title">QS Panel layout</string>
     <!-- [CHAR_LIMIT=NONE] Developer Settings: Label for the option that turns off customizations for a given category.-->
     <string name="theme_customization_device_default">Device default</string>
 
diff --git a/res/xml/display_settings.xml b/res/xml/display_settings.xml
index eb7c0fe000..42bd476ddd 100644
--- a/res/xml/display_settings.xml
+++ b/res/xml/display_settings.xml
@@ -176,6 +176,9 @@
         <ListPreference
             android:key="android.theme.customization.adaptive_icon_shape"
             android:title="@string/theme_customization_icon_shape_title"/>
+        <ListPreference
+            android:key="android.theme.customization.qspanel"
+            android:title="@string/theme_customization_qspanel_title"/>
     </PreferenceCategory>
 
 </PreferenceScreen>
diff --git a/src/com/android/settings/DisplaySettings.java b/src/com/android/settings/DisplaySettings.java
index 1e2a3c2924..238aa9157e 100644
--- a/src/com/android/settings/DisplaySettings.java
+++ b/src/com/android/settings/DisplaySettings.java
@@ -99,6 +99,8 @@ public class DisplaySettings extends DashboardFragment {
                 "android.theme.customization.icon_pack.android"));
         controllers.add(new OverlayCategoryPreferenceController(context,
                 "android.theme.customization.adaptive_icon_shape"));
+        controllers.add(new OverlayCategoryPreferenceController(context,
+                "android.theme.customization.qspanel"));
         return controllers;
     }
 
diff --git a/src/com/android/settings/display/OverlayCategoryPreferenceController.java b/src/com/android/settings/display/OverlayCategoryPreferenceController.java
index 1bd9bc67df..536b5fb466 100644
--- a/src/com/android/settings/display/OverlayCategoryPreferenceController.java
+++ b/src/com/android/settings/display/OverlayCategoryPreferenceController.java
@@ -53,6 +53,7 @@ public class OverlayCategoryPreferenceController extends AbstractPreferenceContr
     @VisibleForTesting
     static final String PACKAGE_DEVICE_DEFAULT = "package_device_default";
     private static final String OVERLAY_TARGET_PACKAGE = "android";
+    private static final String OVERLAY_TARGET_PACKAGE_UI = "com.android.systemui";
     private static final Comparator<OverlayInfo> OVERLAY_INFO_COMPARATOR =
             Comparator.comparingInt(a -> a.priority);
     private final IOverlayManager mOverlayManager;
@@ -183,11 +184,18 @@ public class OverlayCategoryPreferenceController extends AbstractPreferenceContr
         try {
             List<OverlayInfo> overlayInfos = mOverlayManager
                     .getOverlayInfosForTarget(OVERLAY_TARGET_PACKAGE, USER_SYSTEM);
+            List<OverlayInfo> overlayInfosUI = mOverlayManager
+                    .getOverlayInfosForTarget(OVERLAY_TARGET_PACKAGE_UI, USER_SYSTEM);
             for (OverlayInfo overlayInfo : overlayInfos) {
                 if (mCategory.equals(overlayInfo.category)) {
                     filteredInfos.add(overlayInfo);
                 }
             }
+            for (OverlayInfo overlayInfo : overlayInfosUI) {
+                if (mCategory.equals(overlayInfo.category)) {
+                    filteredInfos.add(overlayInfo);
+                }
+            }
         } catch (RemoteException re) {
             throw re.rethrowFromSystemServer();
         }
-- 
2.17.1

