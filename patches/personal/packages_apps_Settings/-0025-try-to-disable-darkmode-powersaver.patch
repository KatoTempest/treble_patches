From beb7df29e5dabc2c837327186f5c58024400f4c5 Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Sat, 31 Oct 2020 15:59:17 -0400
Subject: [PATCH] try to disable darkmode >> powersaver

Change-Id: I9c3b15435b5db84caeb1b3118060f3b422fb6dae
---
 .../display/DarkUIPreferenceController.java   | 10 -----
 .../slices/DarkThemeSlice.java                | 42 +------------------
 2 files changed, 1 insertion(+), 51 deletions(-)

diff --git a/src/com/android/settings/display/DarkUIPreferenceController.java b/src/com/android/settings/display/DarkUIPreferenceController.java
index e93f7a49bd..ea60059afc 100644
--- a/src/com/android/settings/display/DarkUIPreferenceController.java
+++ b/src/com/android/settings/display/DarkUIPreferenceController.java
@@ -20,9 +20,7 @@ import android.app.UiModeManager;
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.IntentFilter;
 import android.content.res.Configuration;
-import android.os.PowerManager;
 import android.provider.Settings;
 
 import androidx.annotation.VisibleForTesting;
@@ -47,7 +45,6 @@ public class DarkUIPreferenceController extends TogglePreferenceController imple
     Preference mPreference;
 
     private UiModeManager mUiModeManager;
-    private PowerManager mPowerManager;
     private Context mContext;
 
     private Fragment mFragment;
@@ -63,7 +60,6 @@ public class DarkUIPreferenceController extends TogglePreferenceController imple
         super(context, key);
         mContext = context;
         mUiModeManager = context.getSystemService(UiModeManager.class);
-        mPowerManager = context.getSystemService(PowerManager.class);
     }
 
     @Override
@@ -111,12 +107,6 @@ public class DarkUIPreferenceController extends TogglePreferenceController imple
 				mPreference.setSummary(null);
     }
 
-    @Override
-    public void onStart() {
-        mContext.registerReceiver(mReceiver,
-                new IntentFilter(PowerManager.ACTION_POWER_SAVE_MODE_CHANGED));
-    }
-
     // used by AccessibilitySettings
     public void setParentFragment(Fragment fragment) {
         mFragment = fragment;
diff --git a/src/com/android/settings/homepage/contextualcards/slices/DarkThemeSlice.java b/src/com/android/settings/homepage/contextualcards/slices/DarkThemeSlice.java
index f934d587ed..df33110bfa 100644
--- a/src/com/android/settings/homepage/contextualcards/slices/DarkThemeSlice.java
+++ b/src/com/android/settings/homepage/contextualcards/slices/DarkThemeSlice.java
@@ -15,8 +15,6 @@
  */
 package com.android.settings.homepage.contextualcards.slices;
 
-import static android.provider.Settings.Global.LOW_POWER_MODE;
-
 import static androidx.slice.builders.ListBuilder.ICON_IMAGE;
 
 import android.annotation.ColorInt;
@@ -30,7 +28,6 @@ import android.os.BatteryManager;
 import android.os.Build;
 import android.os.Handler;
 import android.os.Looper;
-import android.os.PowerManager;
 import android.provider.Settings;
 import android.util.Log;
 
@@ -64,12 +61,10 @@ public class DarkThemeSlice implements CustomSliceable {
 
     private final Context mContext;
     private final UiModeManager mUiModeManager;
-    private final PowerManager mPowerManager;
 
     public DarkThemeSlice(Context context) {
         mContext = context;
         mUiModeManager = context.getSystemService(UiModeManager.class);
-        mPowerManager = context.getSystemService(PowerManager.class);
     }
 
     @Override
@@ -93,8 +88,7 @@ public class DarkThemeSlice implements CustomSliceable {
                     "sKeepSliceShow = " + sKeepSliceShow + ", sSliceClicked = " + sSliceClicked
                             + ", isAvailable = " + isAvailable(mContext));
         }
-        if (mPowerManager.isPowerSaveMode()
-                || ((!sKeepSliceShow || !sSliceClicked) && !isAvailable(mContext))) {
+        if ((!sKeepSliceShow || !sSliceClicked) && !isAvailable(mContext)) {
             return new ListBuilder(mContext, CustomSliceRegistry.DARK_THEME_SLICE_URI,
                     ListBuilder.INFINITY)
                     .setIsError(true)
@@ -182,38 +176,4 @@ public class DarkThemeSlice implements CustomSliceable {
         }
         return false;
     }
-
-    public static class DarkThemeWorker extends SliceBackgroundWorker<Void> {
-        private final Context mContext;
-        private final ContentObserver mContentObserver =
-                new ContentObserver(new Handler(Looper.getMainLooper())) {
-                    @Override
-                    public void onChange(boolean bChanged) {
-                        if (mContext.getSystemService(PowerManager.class).isPowerSaveMode()) {
-                            notifySliceChange();
-                        }
-                    }
-                };
-
-        public DarkThemeWorker(Context context, Uri uri) {
-            super(context, uri);
-            mContext = context;
-        }
-
-        @Override
-        protected void onSlicePinned() {
-            mContext.getContentResolver().registerContentObserver(
-                    Settings.Global.getUriFor(LOW_POWER_MODE), false /* notifyForDescendants */,
-                    mContentObserver);
-        }
-
-        @Override
-        protected void onSliceUnpinned() {
-            mContext.getContentResolver().unregisterContentObserver(mContentObserver);
-        }
-
-        @Override
-        public void close() {
-        }
-    }
 }
-- 
2.17.1

