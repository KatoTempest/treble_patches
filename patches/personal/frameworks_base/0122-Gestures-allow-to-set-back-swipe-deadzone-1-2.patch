From 496c45c17b478c38ee4d2c44c398a96b3e853193 Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Sun, 13 Dec 2020 08:54:39 -0500
Subject: [PATCH 122/220] Gestures: allow to set back swipe deadzone [1/2]

  from
  https://github.com/ezio84/abc_frameworks_base/commit/c02d86aeef44afc821a99002b88bab56b0cbebcb
---
 core/java/android/provider/Settings.java      | 11 ++++++++
 .../GestureNavigationSettingsObserver.java    | 25 +++++++++++++++++++
 .../phone/EdgeBackGestureHandler.java         |  8 ++++++
 3 files changed, 44 insertions(+)

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index f17f80b5d21..d073e239518 100755
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -4782,6 +4782,17 @@ public final class Settings {
          */
         public static final String SCREENSHOT_SHUTTER_SOUND = "screenshot_shutter_sound";
 
+        /**
+         * Set edge gesture Y dead zone
+         * 0 - disabled - stock behavior - default
+         * 1 - smaller top area of the screen
+         * 2 - small top area of the screen
+         * 3 - half top of the screen
+         * @hide
+         */
+        public static final String EDGE_GESTURE_Y_DEAD_ZONE = "edge_gesture_y_dead_zone";
+
+
         /**
          * IMPORTANT: If you add a new public settings you also have to add it to
          * PUBLIC_SETTINGS below. If the new setting is hidden you have to add
diff --git a/core/java/com/android/internal/policy/GestureNavigationSettingsObserver.java b/core/java/com/android/internal/policy/GestureNavigationSettingsObserver.java
index 205c5fd735e..d365b8a4c3d 100644
--- a/core/java/com/android/internal/policy/GestureNavigationSettingsObserver.java
+++ b/core/java/com/android/internal/policy/GestureNavigationSettingsObserver.java
@@ -71,6 +71,9 @@ public class GestureNavigationSettingsObserver extends ContentObserver {
                 DeviceConfig.NAMESPACE_SYSTEMUI,
                 runnable -> mMainHandler.post(runnable),
                 mOnPropertiesChangedListener);
+        r.registerContentObserver(
+                Settings.System.getUriFor(Settings.System.EDGE_GESTURE_Y_DEAD_ZONE),
+                false, this, UserHandle.USER_ALL);
     }
 
     public void unregister() {
@@ -114,4 +117,26 @@ public class GestureNavigationSettingsObserver extends ContentObserver {
                 mContext.getContentResolver(), side, 1.0f, UserHandle.USER_CURRENT);
         return (int) (inset * scale);
     }
+
+    public int getDeadZoneMode() {
+        int mode = Settings.System.getIntForUser(mContext.getContentResolver(),
+            Settings.System.EDGE_GESTURE_Y_DEAD_ZONE, 0,
+            UserHandle.USER_CURRENT);
+        int divider = 0;
+        switch (mode) {
+            default:
+                divider = 0; // mode set to 0, back gesture working on the whole edge
+                break;
+            case 1: // mode set to 1
+                divider = 4;
+                break;
+            case 2: // mode set to 2
+                divider = 3;
+                break;
+            case 3: // mode set to 3, back gesture working only in the half bottom edge
+                divider = 2;
+                break;
+        }
+        return divider;
+    }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/EdgeBackGestureHandler.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/EdgeBackGestureHandler.java
index 14f8363b434..75abbd2bec5 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/EdgeBackGestureHandler.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/EdgeBackGestureHandler.java
@@ -169,6 +169,8 @@ public class EdgeBackGestureHandler extends CurrentUserTracker implements Displa
     private int mEdgeWidthRight;
     // The bottom gesture area height
     private float mBottomGestureHeight;
+    // Displaysize divider to check the edge height where touch down is allowed
+    private int mYDeadzoneDivider = 0;
     // The slop to distinguish between horizontal and vertical motion
     private float mTouchSlop;
     // Duration after which we consider the event as longpress.
@@ -289,6 +291,8 @@ public class EdgeBackGestureHandler extends CurrentUserTracker implements Displa
         mIsBackGestureAllowed =
                 !mGestureNavigationSettingsObserver.areNavigationButtonForcedVisible();
 
+        mYDeadzoneDivider = mGestureNavigationSettingsObserver.getDeadZoneMode();
+
         final DisplayMetrics dm = res.getDisplayMetrics();
         final float defaultGestureHeight = res.getDimension(
                 com.android.internal.R.dimen.navigation_bar_gesture_height) / dm.density;
@@ -556,6 +560,10 @@ public class EdgeBackGestureHandler extends CurrentUserTracker implements Displa
             return false;
         }
 
+        if (mYDeadzoneDivider != 0 && y < (mDisplaySize.y / mYDeadzoneDivider)) {
+            return false;
+        }
+
         int app = -1;
         if (mVocab != null) {
             app = mVocab.getOrDefault(mPackageName, -1);
-- 
2.30.2

