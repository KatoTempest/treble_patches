From d468b70f78106eb49eff4d1ce7c0f5a5ee2789e5 Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Thu, 17 Dec 2020 14:39:31 -0500
Subject: [PATCH 161/187] Avoid to hold wakelock for long time

  from
  https://github.com/syberia-project/platform_frameworks_base/commit/4aae24bd8ba4f07cd58057ef4727f3622f676217
---
 .../android/server/AlarmManagerService.java   | 38 ++++++++++++++++++-
 1 file changed, 36 insertions(+), 2 deletions(-)

diff --git a/services/core/java/com/android/server/AlarmManagerService.java b/services/core/java/com/android/server/AlarmManagerService.java
index 651f941be0b..90a47a6a7bd 100644
--- a/services/core/java/com/android/server/AlarmManagerService.java
+++ b/services/core/java/com/android/server/AlarmManagerService.java
@@ -4169,6 +4169,7 @@ class AlarmManagerService extends SystemService {
         public static final int CHARGING_STATUS_CHANGED = 6;
         public static final int REMOVE_FOR_STOPPED = 7;
         public static final int REMOVE_FOR_CANCELED = 8;
+        public static final int PENDINGINTENT_TIMEOUT = 9;
 
         AlarmHandler() {
             super(Looper.myLooper());
@@ -4218,6 +4219,10 @@ class AlarmManagerService extends SystemService {
                     mDeliveryTracker.alarmTimedOut((IBinder) msg.obj);
                     break;
 
+                case PENDINGINTENT_TIMEOUT:
+                    mDeliveryTracker.pendingIntentTimedOut((PendingIntent) msg.obj);
+                    break;
+
                 case REPORT_ALARMS_ACTIVE:
                     if (mLocalDeviceIdleController != null) {
                         mLocalDeviceIdleController.setAlarmsActive(msg.arg1 != 0);
@@ -4689,8 +4694,12 @@ class AlarmManagerService extends SystemService {
         public void onSendFinished(PendingIntent pi, Intent intent, int resultCode,
                 String resultData, Bundle resultExtras) {
             synchronized (mLock) {
-                mSendFinishCount++;
-                updateTrackingLocked(removeLocked(pi, intent));
+                mHandler.removeMessages(AlarmHandler.PENDINGINTENT_TIMEOUT, pi);
+                InFlight inflight = removeLocked(pi, intent);
+                if (inflight != null) {
+                    mSendFinishCount++;
+                    updateTrackingLocked(inflight);
+                }
             }
         }
 
@@ -4716,6 +4725,28 @@ class AlarmManagerService extends SystemService {
             }
         }
 
+        /**
+         * Timeout of a pendingIntent alarm delivery
+         */
+        public void pendingIntentTimedOut(PendingIntent p) {
+            synchronized (mLock) {
+                InFlight inflight = removeLocked(p, null);
+                if (inflight != null) {
+                    // TODO: implement ANR policy for the target
+                    if (DEBUG_LISTENER_CALLBACK) {
+                        Slog.i(TAG, "Alarm pendingIntent " + p + " timed out in delivery");
+                    }
+                    updateTrackingLocked(inflight);
+                    mSendFinishCount++;
+                } else {
+                    if (DEBUG_LISTENER_CALLBACK) {
+                        Slog.i(TAG, "Spurious timeout of pendingIntent " + p);
+                    }
+                    mLog.w("Spurious timeout of pendingIntent " + p);
+                }
+            }
+        }
+
         /**
          * Deliver an alarm and set up the post-delivery handling appropriately
          */
@@ -4734,6 +4765,9 @@ class AlarmManagerService extends SystemService {
                                         Intent.EXTRA_ALARM_COUNT, alarm.count),
                                 mDeliveryTracker, mHandler, null,
                                 allowWhileIdle ? mIdleOptions : null);
+                        mHandler.sendMessageDelayed(
+                                mHandler.obtainMessage(AlarmHandler.PENDINGINTENT_TIMEOUT,
+                                         alarm.operation), mConstants.LISTENER_TIMEOUT * 2);
                     } catch (PendingIntent.CanceledException e) {
                         if (alarm.repeatInterval > 0) {
                             // This IntentSender is no longer valid, but this
-- 
2.17.1

