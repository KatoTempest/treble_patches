From ebf48167927c6c66ab44e1143fdfc50509d56547 Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Fri, 27 Nov 2020 07:07:35 -0500
Subject: [PATCH 115/129] fix VPN lockdown setting getting overridden on user
 stop

  from
  https://github.com/GrapheneOS/platform_frameworks_base/commit/3cc80133de4d78cd89f3db8f329d24437d8870bf
---
 .../com/android/server/connectivity/Vpn.java  | 23 ++++++++++++++++---
 1 file changed, 20 insertions(+), 3 deletions(-)

diff --git a/services/core/java/com/android/server/connectivity/Vpn.java b/services/core/java/com/android/server/connectivity/Vpn.java
index 1c93d4eb599..8cedc528e79 100644
--- a/services/core/java/com/android/server/connectivity/Vpn.java
+++ b/services/core/java/com/android/server/connectivity/Vpn.java
@@ -548,6 +548,22 @@ public class Vpn {
      * @param lockdown whether to prevent all traffic outside of a VPN.
      */
     public synchronized void setLockdown(boolean lockdown) {
+        // Save the always-on state, since this is expected to be called
+        // for changing the lockdown/always-on setting.
+        setLockdown(lockdown, true);
+    }
+
+    /**
+     * Does the same as {@link #setLockdown(boolean)}, but allow for prevention of saving the
+     * always-on state. When users are stopped, lockdown is turned off; this originally
+     * called saveAlwaysOnPackage with mLockdown == false into Settings.Secure, overriding
+     * what was saved before. Therefore, we need to provide a way to not call setAlwaysOnPackage
+     * for that case (GrapheneOS/os_issue_tracker#213).
+     *
+     * @param lockdown whether to prevent all traffic outside of a VPN.
+     * @param saveAlwaysOnState whether to save the always-on state.
+     */
+    private synchronized void setLockdown(boolean lockdown, boolean saveAlwaysOnState) {
         enforceControlPermissionOrInternalCaller();
 
         setVpnForcedLocked(lockdown);
@@ -555,7 +571,7 @@ public class Vpn {
 
         // Update app lockdown setting if it changed. Legacy VPN lockdown status is controlled by
         // LockdownVpnTracker.isEnabled() which keeps track of its own state.
-        if (mAlwaysOn) {
+        if (mAlwaysOn && saveAlwaysOnState) {
             saveAlwaysOnPackage();
         }
     }
@@ -1598,8 +1614,9 @@ public class Vpn {
      * Called when the user associated with this VPN has just been stopped.
      */
     public synchronized void onUserStopped() {
-        // Switch off networking lockdown (if it was enabled)
-        setLockdown(false);
+        // Switch off networking lockdown (if it was enabled), but don't
+        // override the saved always-on state with mLockdown == false.
+        setLockdown(false, false);
         mAlwaysOn = false;
 
         // Quit any active connections
-- 
2.17.1

