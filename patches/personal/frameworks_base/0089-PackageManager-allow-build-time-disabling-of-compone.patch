From 7a6cf88be5b72b2e10f91db8127260987d8b4c1c Mon Sep 17 00:00:00 2001
From: Victor Bo <bvoid@yandex.ru>
Date: Wed, 25 Nov 2020 05:10:45 -0500
Subject: [PATCH 089/191] PackageManager: allow build-time disabling of
 components

  * based on
  https://github.com/LineageOS/android_frameworks_base/commit/c695ead3ceba959ba402da03e2cb575f46a0b359
  https://github.com/LineageOS/android_vendor_lineage/commit/99228d6db70e632cf66a24c1c65a06d5aa1a8478#diff-               a9460d5e9ee45a0bbea922bd00bee1b0
  https://github.com/LineageOS/android_device_oneplus_oneplus2/commit/9b916939432bb5dda339bb2405f4c45ca82f80f4#diff-      e0a3646285a5f4f89d0d2f1cd05c0458
  https://github.com/LineageOS/android_device_oneplus_oneplus2/commit/05331348b64539fbd78f898dee00300c6cc02a50#diff-      e0a3646285a5f4f89d0d2f1cd05c0458
---
 core/res/res/values/custom_config.xml         | 47 +++++++++++++++++++
 core/res/res/values/custom_symbols.xml        |  8 +++-
 .../server/pm/PackageManagerService.java      | 42 +++++++++++++++++
 3 files changed, 95 insertions(+), 2 deletions(-)
 create mode 100644 core/res/res/values/custom_config.xml

diff --git a/core/res/res/values/custom_config.xml b/core/res/res/values/custom_config.xml
new file mode 100644
index 00000000000..904a0c4e8fa
--- /dev/null
+++ b/core/res/res/values/custom_config.xml
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+/*
+** Copyright 2009, The Android Open Source Project
+**
+** Licensed under the Apache License, Version 2.0 (the "License");
+** you may not use this file except in compliance with the License.
+** You may obtain a copy of the License at
+**
+**     http://www.apache.org/licenses/LICENSE-2.0
+**
+** Unless required by applicable law or agreed to in writing, software
+** distributed under the License is distributed on an "AS IS" BASIS,
+** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+** See the License for the specific language governing permissions and
+** limitations under the License.
+*/
+-->
+
+<!-- These resources are around just to allow their values to be customized
+     for different hardware and product builds.  Do not translate.
+
+     NOTE: The naming convention is "config_camelCaseValue". Some legacy
+     entries do not follow the convention, but all new entries should. -->
+
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+    <!-- The list of components which should be automatically disabled for a specific device.
+         Note: this MUST not be used to randomly disable components, ask for approval first! -->
+    <string-array name="config_deviceDisabledComponents" translatable="false">
+    </string-array>
+    <!-- The list of components which should be automatically disabled for all devices -->
+    <!-- Disable stock OTA components if installed
+         also disable NearbyMessagingService & DiscoveryService -->
+    <string-array name="config_globallyDisabledComponents" translatable="false">
+        <item>com.android.vending/com.google.android.finsky.systemupdate.SystemUpdateSettingsContentProvider</item>
+        <item>com.android.vending/com.google.android.finsky.systemupdateactivity.SettingsSecurityEntryPoint</item>
+        <item>com.android.vending/com.google.android.finsky.systemupdateactivity.SystemUpdateActivity</item>
+        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateActivity</item>
+        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateGcmTaskService</item>
+        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService</item>
+        <item>com.google.android.gms/com.google.android.gms.nearby.messages.service.NearbyMessagesService</item>
+        <item>com.google.android.gms/com.google.android.gms.nearby.discovery.service.DiscoveryService</item>
+    </string-array>
+    <!-- The list of components which should be forced to be enabled -->
+    <string-array name="config_forceEnabledComponents" translatable="false">
+    </string-array>
+</resources>
diff --git a/core/res/res/values/custom_symbols.xml b/core/res/res/values/custom_symbols.xml
index 82f44125a11..78180dd8d7d 100644
--- a/core/res/res/values/custom_symbols.xml
+++ b/core/res/res/values/custom_symbols.xml
@@ -15,6 +15,10 @@
 */
 -->
 <resources>
-  <java-symbol type="string" name="global_action_recovery" />
-  <java-symbol type="drawable" name="ic_recovery" />
+    <java-symbol type="string" name="global_action_recovery" />
+    <java-symbol type="drawable" name="ic_recovery" />
+    <!-- Package Manager components controller -->
+    <java-symbol type="array" name="config_deviceDisabledComponents" />
+    <java-symbol type="array" name="config_globallyDisabledComponents" />
+    <java-symbol type="array" name="config_forceEnabledComponents" />
 </resources>
diff --git a/services/core/java/com/android/server/pm/PackageManagerService.java b/services/core/java/com/android/server/pm/PackageManagerService.java
index 71c3d9b2c30..50612762866 100644
--- a/services/core/java/com/android/server/pm/PackageManagerService.java
+++ b/services/core/java/com/android/server/pm/PackageManagerService.java
@@ -1476,6 +1476,8 @@ public class PackageManagerService extends IPackageManager.Stub
                         filter.hasDataScheme(IntentFilter.SCHEME_HTTPS));
     }
 
+    ArrayList<ComponentName> mDisabledComponentsList;
+
     // Set of pending broadcasts for aggregating enable/disable of components.
     @VisibleForTesting(visibility = Visibility.PACKAGE)
     public static class PendingPackageBroadcasts {
@@ -3493,6 +3495,17 @@ public class PackageManagerService extends IPackageManager.Stub
                 Slog.i(TAG, "Deferred reconcileAppsData finished " + count + " packages");
             }, "prepareAppData");
 
+            // Disable components marked for disabling at build-time
+            mDisabledComponentsList = new ArrayList<ComponentName>();
+            enableComponents(mContext.getResources().getStringArray(
+                    com.android.internal.R.array.config_deviceDisabledComponents), false);
+            enableComponents(mContext.getResources().getStringArray(
+                    com.android.internal.R.array.config_globallyDisabledComponents), false);
+
+            // Enable components marked for forced-enable at build-time
+            enableComponents(mContext.getResources().getStringArray(
+                    com.android.internal.R.array.config_forceEnabledComponents), true);
+
             // If this is first boot after an OTA, and a normal boot, then
             // we need to clear code cache directories.
             // Note that we do *not* clear the application profiles. These remain valid
@@ -3659,6 +3672,29 @@ public class PackageManagerService extends IPackageManager.Stub
         Slog.i(TAG, "Fix for b/169414761 is applied");
     }
 
+    private void enableComponents(String[] components, boolean enable) {
+        // Disable or enable components marked at build-time
+        for (String name : components) {
+            ComponentName cn = ComponentName.unflattenFromString(name);
+            if (!enable) {
+                mDisabledComponentsList.add(cn);
+            }
+            Slog.v(TAG, "Changing enabled state of " + name + " to " + enable);
+            String className = cn.getClassName();
+            PackageSetting pkgSetting = mSettings.mPackages.get(cn.getPackageName());
+            if (pkgSetting == null || pkgSetting.pkg == null
+                    || !AndroidPackageUtils.hasComponentClassName(pkgSetting.pkg, className)) {
+                Slog.w(TAG, "Unable to change enabled state of " + name + " to " + enable);
+                continue;
+            }
+            if (enable) {
+                pkgSetting.enableComponentLPw(className, UserHandle.USER_OWNER);
+            } else {
+                pkgSetting.disableComponentLPw(className, UserHandle.USER_OWNER);
+            }
+        }
+    }
+
     /**
      * Uncompress and install stub applications.
      * <p>In order to save space on the system partition, some applications are shipped in a
@@ -20941,6 +20977,12 @@ public class PackageManagerService extends IPackageManager.Stub
     public void setComponentEnabledSetting(ComponentName componentName,
             int newState, int flags, int userId) {
         if (!mUserManager.exists(userId)) return;
+        // Don't allow to enable components marked for disabling at build-time
+        if (mDisabledComponentsList.contains(componentName)) {
+            Slog.d(TAG, "Ignoring attempt to set enabled state of disabled component "
+                    + componentName.flattenToString());
+            return;
+        }
         setEnabledSetting(componentName.getPackageName(),
                 componentName.getClassName(), newState, flags, userId, null);
     }
-- 
2.17.1

